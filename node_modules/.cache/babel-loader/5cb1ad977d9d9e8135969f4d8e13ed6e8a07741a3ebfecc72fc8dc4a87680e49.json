{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"TaskList\",\n  data() {\n    return {\n      tasks: [] // Almacenamiento de las tareas\n    };\n  },\n  methods: {\n    // Llamada para obtener las tareas desde la API externa\n    async fetchTasks() {\n      try {\n        const response = await axios.get(\"https://dummyjson.com/todos\");\n        this.tasks = response.data.todos; // Asignamos las tareas obtenidas de la API\n      } catch (error) {\n        console.error(\"Error al obtener las tareas: \", error);\n      }\n    },\n    // Cambiar el estado de una tarea (completada/no completada)\n    toggleTaskCompletion(task) {\n      task.completed = !task.completed;\n    },\n    // Eliminar la tarea seleccionada\n    deleteTask(task) {\n      this.tasks = this.tasks.filter(t => t.id !== task.id);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","tasks","methods","fetchTasks","response","get","todos","error","console","toggleTaskCompletion","task","completed","deleteTask","filter","t","id"],"sources":["src/views/TaskList.vue"],"sourcesContent":["<template>\n    <div class=\"container my-5\">\n      <h1 class=\"text-center mb-4\">Lista de Tareas</h1>\n  \n      <!-- Caja para cargar tareas y mostrar las tareas cargadas -->\n      <div class=\"task-box p-4 border rounded shadow-sm\">\n        <button class=\"btn btn-primary d-block mx-auto mb-4\" @click=\"fetchTasks\">\n          <i class=\"fas fa-download\"></i> Cargar Tareas\n        </button>\n  \n        <!-- Lista de tareas cargadas dentro de la caja -->\n        <div v-if=\"tasks.length > 0\" class=\"task-list\">\n          <div v-for=\"task in tasks\" :key=\"task.id\" class=\"task-item card my-2\">\n            <div class=\"card-body d-flex justify-content-between align-items-center\">\n              <!-- Descripción de la tarea con su estado -->\n              <div class=\"task-text\">\n                <h5 :style=\"{ textDecoration: task.completed ? 'line-through' : 'none' }\">\n                  {{ task.todo }}\n                </h5>\n                <span :class=\"task.completed ? 'completed' : 'pending'\">\n                  {{ task.completed ? 'Completada' : 'Pendiente' }}\n                </span>\n              </div>\n  \n              <!-- Botones de completar y eliminar con iconos -->\n              <div>\n                <!-- Botón Completar con solo el ícono de la palomita (marcada o desmarcada según el estado) -->\n                <button class=\"btn btn-outline-success btn-sm me-2\" @click=\"toggleTaskCompletion(task)\" aria-label=\"Marcar como completada\">\n                  <i class=\"bi\" :class=\"task.completed ? 'bi-check-circle-fill' : 'bi-check-circle'\"></i>\n                </button>\n  \n                <!-- Botón Eliminar con ícono -->\n                <button class=\"btn btn-outline-danger btn-sm\" @click=\"deleteTask(task)\" aria-label=\"Eliminar tarea\">\n                  <i class=\"bi bi-trash\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n  \n        <!-- Mensaje si no hay tareas -->\n        <div v-else>\n          <p class=\"text-center alert alert-warning mt-4\">No hay tareas disponibles.</p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from \"axios\";\n  \n  export default {\n    name: \"TaskList\",\n    data() {\n      return {\n        tasks: [], // Almacenamiento de las tareas\n      };\n    },\n    methods: {\n      // Llamada para obtener las tareas desde la API externa\n      async fetchTasks() {\n        try {\n          const response = await axios.get(\"https://dummyjson.com/todos\");\n          this.tasks = response.data.todos; // Asignamos las tareas obtenidas de la API\n        } catch (error) {\n          console.error(\"Error al obtener las tareas: \", error);\n        }\n      },\n  \n      // Cambiar el estado de una tarea (completada/no completada)\n      toggleTaskCompletion(task) {\n        task.completed = !task.completed;\n      },\n  \n      // Eliminar la tarea seleccionada\n      deleteTask(task) {\n        this.tasks = this.tasks.filter((t) => t.id !== task.id);\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* Caja para cargar tareas */\n  .task-box {\n    max-width: 900px;\n    margin: 0 auto;\n    background-color: #f9f9f9;\n    border: 1px solid #007bff;\n    border-radius: 10px;\n    padding: 30px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    text-align: center; /* Centrado de todos los elementos dentro de la caja */\n  }\n  \n  /* Contenedor de las tareas */\n  .task-list {\n    display: flex;\n    flex-direction: column;\n    align-items: center; /* Centra las tarjetas */\n    justify-content: center;\n    margin-top: 20px;\n  }\n  \n  /* Estilos para las tarjetas de las tareas */\n  .task-item {\n    border: 2px solid #007bff;\n    border-radius: 10px;\n    padding: 15px;\n    background-color: #f0f8ff;\n    width: 80%; /* Tamaño de las tarjetas */\n    max-width: 800px; /* Limitar el ancho máximo */\n    margin-bottom: 15px;\n    text-align: center; /* Centrado de todo el contenido de la tarjeta */\n  }\n  \n  .task-item:hover {\n    background-color: #e0f7ff;\n  }\n  \n  .card-body {\n    display: flex;\n    justify-content: center; /* Centra el contenido */\n    align-items: center;\n  }\n  \n  h5 {\n    margin: 0;\n    text-align: center; /* Centrado de texto */\n  }\n  \n  .card-body .btn {\n    margin-left: 10px;\n  }\n  \n  h1 {\n    color: #007bff;\n    text-align: center;\n  }\n  \n  /* Estilos para el formulario */\n  button.d-block.mx-auto {\n    display: block;\n    margin: 0 auto;\n    padding: 10px 20px;\n  }\n  \n  /* Clases para el estado de las tareas */\n  .pending {\n    background-color: #f1c40f; /* Mostaza */\n    color: white;\n    padding: 2px 10px;\n    border-radius: 5px;\n  }\n  \n  .completed {\n    background-color: green;\n    color: white;\n    padding: 2px 10px;\n    border-radius: 5px;\n  }\n  \n  /* Estilos de los iconos de los botones */\n  button i {\n    margin-right: 5px;\n  }\n  \n  /* Alineación del botón Cargar Tareas en una sola línea */\n  button i {\n    vertical-align: middle;\n  }\n  </style>\n  "],"mappings":"AAiDA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,QAAA,SAAAN,KAAA,CAAAO,GAAA;QACA,KAAAJ,KAAA,GAAAG,QAAA,CAAAJ,IAAA,CAAAM,KAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,kCAAAA,KAAA;MACA;IACA;IAEA;IACAE,qBAAAC,IAAA;MACAA,IAAA,CAAAC,SAAA,IAAAD,IAAA,CAAAC,SAAA;IACA;IAEA;IACAC,WAAAF,IAAA;MACA,KAAAT,KAAA,QAAAA,KAAA,CAAAY,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA,KAAAL,IAAA,CAAAK,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}